<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.bsc.sofa</groupId>
        <artifactId>parent-sofa</artifactId>
        <version>1.0.2</version>
    </parent>

    <groupId>com.socgen.bsc.cbs.businessviews</groupId>
    <artifactId>businessviews</artifactId>
    <version>1.6.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>RESG/BSC/DAT</name>
    </organization>

    <modules>
        <module>oozie</module>
        <module>spark</module>
        <module>assembly</module>
    </modules>

    <properties>
        <encoding>UTF-8</encoding>
        <jdk.version.source>1.7</jdk.version.source>
        <jdk.version.target>1.7</jdk.version.target>

        <scala.major.version>2.10</scala.major.version>
        <scala.version>2.10.6</scala.version>
        <scala.compat.version>2.10</scala.compat.version>

        <spark.version>1.6.1</spark.version>

        <maven-compiler-plugin>3.5.1</maven-compiler-plugin>
        <scoverage.plugin.version>1.3.0</scoverage.plugin.version>

        <pom.businessviews.bvsources>
            "rct_bv",
            "dun_le_bv",
            "avox_le_bv",
            "insee_le_bv",
            "lei_le_bv",
            "perle_le_bv",
            "idq_le_bv",
            "grc_pm_bv",
            "grc_pp_bv",
            "privalia_pm_bv",
            "privalia_pp_bv",
            "cz_le_bv",
            "sk_le_bv"
        </pom.businessviews.bvsources>

        <pom.businessviews.buildpm.datasources>
            "rct",
            "dun",
            "avox",
            "lei",
            "perle",
            "grc_pm",
            "idq",
            "insee",
            "privalia_pm",
            "cz",
            "sk"
        </pom.businessviews.buildpm.datasources>
        <pom.businessviews.buildpm.avroschemapath>"avro"</pom.businessviews.buildpm.avroschemapath>
        <pom.businessviews.buildpm.avroschemas>
            "common/pp.avsc",
            "common/pm.avsc",
            "common/grcCav.avsc",
            "common/grcAddHolder.avsc",
            "common/grcHolder.avsc",
            "common/grcCustomerRelationship.avsc",
            "common/grcChiefExecutiveOfficer.avsc",
            "common/cercles.avsc",
            "common/naceRev2.avsc",
            "common/annualSales.avsc",
            "common/employees.avsc",
            "pm/annualSales.avsc",
            "pm/asBracket.avsc",
            "pm/auditField.avsc",
            "pm/networkRelation.avsc",
            "pm/otherIdmut.avsc",
            "pm/profit.avsc",
            "pm/workforce.avsc",
            "pm/thirdParty.avsc"
        </pom.businessviews.buildpm.avroschemas>

        <pom.businessviews.buildpp.datasources>
            "grc_pp",
            "privalia_pp"
        </pom.businessviews.buildpp.datasources>
        <pom.businessviews.buildpp.avroschemapath>"avro"</pom.businessviews.buildpp.avroschemapath>
        <pom.businessviews.buildpp.avroschemas>
            "common/pp.avsc",
            "common/pm.avsc",
            "common/grcCav.avsc",
            "common/grcCustomerRelationship.avsc",
            "common/cercles.avsc",
            "common/naceRev2.avsc",
            "pp/pp.avsc"
        </pom.businessviews.buildpp.avroschemas>
        <pom.cbs.build_third_party.output_json>false</pom.cbs.build_third_party.output_json>
    </properties>

    <scm>
        <url>scm:git:ssh://git@sgithub.fr.world.socgen/BSC-A2744/businessviews.git</url>
        <connection>scm:git:ssh://git@sgithub.fr.world.socgen:BSC-A2744/businessviews.git</connection>
        <developerConnection>scm:git:ssh://git@sgithub.fr.world.socgen:BSC-A2744/businessviews.git</developerConnection>
        <tag>v1.1.1-RC</tag>
    </scm>

    <repositories>
        <!-- HDP Repositories -->
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
            <id>HDPReleases</id>
            <name>HDP Releases</name>
            <url>http://repo.hortonworks.com/content/repositories/releases/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
            <id>HDPPublic</id>
            <name>HDP Public</name>
            <url>http://repo.hortonworks.com/content/repositories/public/</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.major.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.major.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.major.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>com.databricks</groupId>
                <artifactId>spark-csv_${scala.major.version}</artifactId>
                <version>1.4.0</version>
            </dependency>

            <dependency>
                <groupId>com.databricks</groupId>
                <artifactId>spark-avro_${scala.major.version}</artifactId>
                <version>2.0.1</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.2.1</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.1.7</version>
            </dependency>

            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.major.version}</artifactId>
                <version>3.4.0</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.9.3</version>
            </dependency>

            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.major.version}</artifactId>
                <version>2.2.6</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <!-- make sure wrong scala version is not pulled in -->
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.holdenkarau</groupId>
                <artifactId>spark-testing-base_2.10</artifactId>
                <version>${spark.version}_0.8.0</version>
                <!--<scope>test</scope>-->
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <!-- To define the plugin version in your parent POM -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
            </plugins>

        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin}</version>
                <configuration>
                    <source>${jdk.version.source}</source>
                    <target>${jdk.version.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                    <argLine>
                        -Xmx1536m -XX:MaxPermSize=512m -XX:ReservedCodeCacheSize=512m
                    </argLine>
                    <parallel>false</parallel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <aggregate>false</aggregate>
                    <highlighting>true</highlighting>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>project-team</report>
                            <report>modules</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                            <report>plugins</report>
                            <report>cim</report>
                            <report>issue-tracking</report>
                            <report>scm</report>
                            <report>dependency-convergence</report>
                            <report>license</report>
                            <report>plugin-management</report>
                            <report>distribution-management</report>
                            <report>summary</report>
                            <report>mailing-list</report>
                            <report>dependencies</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>


            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                            <!-- <report>integration-report</report> -->
                            <!-- or <report>report-only</report> -->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>com.github.danielflower.mavenplugins</groupId>
                <artifactId>gitlog-maven-plugin</artifactId>
                <version>1.13.3</version>
                <configuration>
                    <simpleHTMLChangeLogFilename>gitlog.html</simpleHTMLChangeLogFilename>
                </configuration>
            </plugin>

        </plugins>

    </reporting>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <build.id>local</build.id>
            </properties>
        </profile>

        <profile>
            <id>sonar</id>
            <properties>
                <sonar.sources>src/main/scala</sonar.sources>
                <spark.sonar.sources>src/main/scala</spark.sonar.sources>
                <sonar.scoverage.reportPath>target/scoverage.xml</sonar.scoverage.reportPath>
            </properties>
        </profile>

        <profile>
            <id>dev</id>
            <properties>
                <build.id>dev</build.id>

                <!--This user for identify developper to isolate environement.
This need to be setted only for 'dev-custom' maven profile.This variable must be declared with empty value in dev/hom/prd meven profile.
Value need to be like this [a-zA-Z0-9] -->
                <pom.global.developper_id />
                <pom.cbs.build_third_party.output_json>true</pom.cbs.build_third_party.output_json>

                <pom.global.cluster_name>dhadcluster02</pom.global.cluster_name>
                <pom.global.namenode>hdfs://${pom.global.cluster_name}</pom.global.namenode>
                <pom.global.kerberoshivemetastoreuri>thrift://dhadlx102.haas.socgen:9083</pom.global.kerberoshivemetastoreuri>
                <pom.global.kerberoshiveprincipal>hive/_HOST@PHAD</pom.global.kerberoshiveprincipal>

                <pom.cbs.hdfs.projectroot>${pom.global.namenode}/project/bsc/cbs</pom.cbs.hdfs.projectroot>
                <pom.cbs.hive.dbname>project_bsc_cbs</pom.cbs.hive.dbname>

                <pom.cbs.oozie.url>http://dhadlx54.dns21.socgen:11000/oozie</pom.cbs.oozie.url>

                <!-- ############################################## -->

                <pom.cbs.appuser>cbsddadm</pom.cbs.appuser>
                <pom.cbs.fs.projectroot>/applis/hadd/gcdl/cbs</pom.cbs.fs.projectroot>
                <pom.businessviews.fs.root_dir>${pom.cbs.fs.projectroot}/businessviews</pom.businessviews.fs.root_dir>
                <pom.businessviews.oozie.url>http://dhadlx54.dns21.socgen:11000/oozie</pom.businessviews.oozie.url>
                <pom.cbs.fs.kerberosappkeytabpath />

                <pom.businessviews.xml.hivecredential.bloc_comment_begin>&lt;!--</pom.businessviews.xml.hivecredential.bloc_comment_begin>
                <pom.businessviews.xml.hivecredential.bloc_comment_end>--&gt;</pom.businessviews.xml.hivecredential.bloc_comment_end>

                <!-- ############################################# -->

                <pom.businessviews.appenv>Dev</pom.businessviews.appenv>
                <pom.businessviews.spark_jar_name>cbs_businessviews_${project.version}.jar</pom.businessviews.spark_jar_name>

                <pom.businessviews.yarnqueue>DAT</pom.businessviews.yarnqueue>
                <pom.businessviews.cbsoozielauncher>OOZIE_LAUNCHER</pom.businessviews.cbsoozielauncher>

                <pom.businessviews.base_input_dir>${pom.global.namenode}/lake/resg</pom.businessviews.base_input_dir>
                <pom.businessviews.base_output_dir>${pom.cbs.hdfs.projectroot}/data</pom.businessviews.base_output_dir>

                <pom.businessviews.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/businessviews</pom.businessviews.hdfs.root_dir>
                <pom.businessviews.hdfs.bin_dir>${pom.businessviews.hdfs.root_dir}/bin</pom.businessviews.hdfs.bin_dir>
                <pom.businessviews.hdfs.conf_dir>${pom.businessviews.hdfs.root_dir}/conf</pom.businessviews.hdfs.conf_dir>
                <pom.businessviews.hdfs.conf_schemas_dir>${pom.businessviews.hdfs.conf_dir}/schemas</pom.businessviews.hdfs.conf_schemas_dir>
                <pom.businessviews.hdfs.lib_dir>${pom.businessviews.hdfs.root_dir}/lib</pom.businessviews.hdfs.lib_dir>
                <pom.businessviews.hdfs.componants_dir>${pom.businessviews.hdfs.root_dir}/technical_components</pom.businessviews.hdfs.componants_dir>
                <pom.businessviews.hdfs.oozie_dir>${pom.businessviews.hdfs.componants_dir}/oozie</pom.businessviews.hdfs.oozie_dir>
                <pom.businessviews.hdfs.oozie.coordinator_dir>${pom.businessviews.hdfs.oozie_dir}/coordinator</pom.businessviews.hdfs.oozie.coordinator_dir>
                <pom.businessviews.hdfs.oozie.workflow_dir>${pom.businessviews.hdfs.oozie_dir}/workflow</pom.businessviews.hdfs.oozie.workflow_dir>

                <pom.businessviews.hdfs.spark_dir>${pom.businessviews.hdfs.componants_dir}/spark</pom.businessviews.hdfs.spark_dir>
                <pom.businessviews.hdfs.hive_dir>${pom.businessviews.hdfs.componants_dir}/hive</pom.businessviews.hdfs.hive_dir>

                <pom.businessviews.hdfs.oozie.libpath>${pom.businessviews.hdfs.lib_dir},${pom.businessviews.hdfs.conf_schemas_dir}</pom.businessviews.hdfs.oozie.libpath>
                <pom.businessviews.hdfs.oozie.bundle_path>${pom.businessviews.hdfs.oozie_dir}/bundle.xml</pom.businessviews.hdfs.oozie.bundle_path>

                <pom.cbs.kerberosuser>cbsddadm</pom.cbs.kerberosuser>
                <pom.cbs.kerberosprincipal>NONE</pom.cbs.kerberosprincipal>
                <pom.cbs.hdfs.kerberosappkeytabpath>${pom.businessviews.hdfs.oozie_dir}/cbspdadm.applicatif.keytab</pom.cbs.hdfs.kerberosappkeytabpath>

                <pom.businessviews.bt.num-executors>4</pom.businessviews.bt.num-executors>
                <pom.businessviews.bt.executor-cores>3</pom.businessviews.bt.executor-cores>
                <pom.businessviews.bt.executor-memory>2G</pom.businessviews.bt.executor-memory>

                <pom.kafkaproducer.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/kafka-producer</pom.kafkaproducer.hdfs.root_dir>
                <pom.enrichedata.hdfs.conf_schemas_dir>${pom.cbs.hdfs.projectroot}/enrichedata/conf/schemas</pom.enrichedata.hdfs.conf_schemas_dir>
            </properties>
        </profile>

        <profile>
            <id>hom</id>
            <properties>
                <build.id>hom</build.id>
                <pom.cbs.build_third_party.output_json>false</pom.cbs.build_third_party.output_json>

                <!--This user for identify developper to isolate environement.
                This need to be setted only for 'dev-custom' maven profile.
                This variable must be declared with empty value in dev/hom/prd meven profile.
                Value need to be like this [a-zA-Z0-9] -->
                <pom.global.developper_id />

                <pom.global.cluster_name>phadcluster01</pom.global.cluster_name>
                <pom.global.namenode>hdfs://${pom.global.cluster_name}</pom.global.namenode>
                <pom.global.kerberoshivemetastoreuri>thrift://phadlx50.haas.socgen:9083,thrift://phadlx51.haas.socgen:9083</pom.global.kerberoshivemetastoreuri>
                <pom.global.kerberoshiveprincipal>hive/_HOST@PHAD</pom.global.kerberoshiveprincipal>

                <pom.cbs.hdfs.projectroot>${pom.global.namenode}/project-h/bsc/cbs</pom.cbs.hdfs.projectroot>
                <pom.cbs.hive.dbname>projecth_bsc_cbs</pom.cbs.hive.dbname>

                <pom.cbs.oozie.url>http://phadlx50.haas.socgen:11000/oozie</pom.cbs.oozie.url>

                <!-- ############################################## -->

                <pom.cbs.appuser>cbsphadm</pom.cbs.appuser>
                <pom.cbs.fs.projectroot>/applis/cbsph</pom.cbs.fs.projectroot>
                <pom.businessviews.fs.root_dir>${pom.cbs.fs.projectroot}/businessviews</pom.businessviews.fs.root_dir>
                <pom.cbs.fs.kerberosappkeytabpath>/applis/cbsph/.keytabs/cbsphadm.applicatif.keytab</pom.cbs.fs.kerberosappkeytabpath>

                <pom.businessviews.xml.hivecredential.bloc_comment_begin />
                <pom.businessviews.xml.hivecredential.bloc_comment_end />

                <!-- ############################################# -->


                <pom.businessviews.appenv>Hom</pom.businessviews.appenv>
                <pom.businessviews.spark_jar_name>cbs_businessviews_${project.version}.jar</pom.businessviews.spark_jar_name>

                <pom.businessviews.yarnqueue>CBSPH</pom.businessviews.yarnqueue>
                <pom.businessviews.cbsoozielauncher>CBSPH</pom.businessviews.cbsoozielauncher>

                <pom.businessviews.base_input_dir>${pom.global.namenode}/lake-h/resg</pom.businessviews.base_input_dir>
                <pom.businessviews.base_output_dir>${pom.cbs.hdfs.projectroot}/data</pom.businessviews.base_output_dir>

                <pom.businessviews.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/businessviews</pom.businessviews.hdfs.root_dir>
                <pom.businessviews.hdfs.bin_dir>${pom.businessviews.hdfs.root_dir}/bin</pom.businessviews.hdfs.bin_dir>
                <pom.businessviews.hdfs.conf_dir>${pom.businessviews.hdfs.root_dir}/conf</pom.businessviews.hdfs.conf_dir>
                <pom.businessviews.hdfs.conf_schemas_dir>${pom.businessviews.hdfs.conf_dir}/schemas</pom.businessviews.hdfs.conf_schemas_dir>
                <pom.businessviews.hdfs.lib_dir>${pom.businessviews.hdfs.root_dir}/lib</pom.businessviews.hdfs.lib_dir>
                <pom.businessviews.hdfs.componants_dir>${pom.businessviews.hdfs.root_dir}/technical_components</pom.businessviews.hdfs.componants_dir>
                <pom.businessviews.hdfs.oozie_dir>${pom.businessviews.hdfs.componants_dir}/oozie</pom.businessviews.hdfs.oozie_dir>
                <pom.businessviews.hdfs.oozie.coordinator_dir>${pom.businessviews.hdfs.oozie_dir}/coordinator</pom.businessviews.hdfs.oozie.coordinator_dir>
                <pom.businessviews.hdfs.oozie.workflow_dir>${pom.businessviews.hdfs.oozie_dir}/workflow</pom.businessviews.hdfs.oozie.workflow_dir>

                <pom.businessviews.hdfs.spark_dir>${pom.businessviews.hdfs.componants_dir}/spark</pom.businessviews.hdfs.spark_dir>
                <pom.businessviews.hdfs.hive_dir>${pom.businessviews.hdfs.componants_dir}/hive</pom.businessviews.hdfs.hive_dir>

                <pom.businessviews.hdfs.oozie.libpath>${pom.businessviews.hdfs.lib_dir},${pom.businessviews.hdfs.conf_schemas_dir}</pom.businessviews.hdfs.oozie.libpath>
                <pom.businessviews.hdfs.oozie.bundle_path>${pom.businessviews.hdfs.oozie_dir}/bundle.xml</pom.businessviews.hdfs.oozie.bundle_path>

                <pom.cbs.kerberosuser>cbsphadm</pom.cbs.kerberosuser>
                <pom.cbs.kerberosprincipal>cbsphadm/phadlx52.haas.socgen@PHAD</pom.cbs.kerberosprincipal>
                <pom.cbs.hdfs.kerberosappkeytabpath>${pom.global.namenode}/user/cbsphadm/cbsphadm.applicatif.keytab</pom.cbs.hdfs.kerberosappkeytabpath>
                <pom.businessviews.bt.num-executors>15</pom.businessviews.bt.num-executors>
                <pom.businessviews.bt.executor-cores>5</pom.businessviews.bt.executor-cores>
                <pom.businessviews.bt.executor-memory>9G</pom.businessviews.bt.executor-memory>

                <pom.kafkaproducer.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/kafka-producer</pom.kafkaproducer.hdfs.root_dir>
                <pom.enrichedata.hdfs.conf_schemas_dir>${pom.cbs.hdfs.projectroot}/enrichedata/conf/schemas</pom.enrichedata.hdfs.conf_schemas_dir>
            </properties>
        </profile>

        <profile>
            <id>prd</id>
            <properties>
                <build.id>prd</build.id>

                <pom.cbs.build_third_party.output_json>false</pom.cbs.build_third_party.output_json>


                <!--This user for identify developper to isolate environement.
                This need to be setted only for 'dev-custom' maven profile.
                This variable must be declared with empty value in dev/hom/prd meven profile.
                Value need to be like this [a-zA-Z0-9] -->
                <pom.global.developper_id />

                <pom.global.cluster_name>phadcluster01</pom.global.cluster_name>
                <pom.global.namenode>hdfs://${pom.global.cluster_name}</pom.global.namenode>
                <pom.global.kerberoshivemetastoreuri>thrift://phadlx50.haas.socgen:9083,thrift://phadlx51.haas.socgen:9083</pom.global.kerberoshivemetastoreuri>
                <pom.global.kerberoshiveprincipal>hive/_HOST@PHAD</pom.global.kerberoshiveprincipal>

                <pom.cbs.hdfs.projectroot>${pom.global.namenode}/project/bsc/cbs</pom.cbs.hdfs.projectroot>
                <pom.cbs.hive.dbname>project_bsc_cbs</pom.cbs.hive.dbname>

                <pom.cbs.oozie.url>http://phadlx50.haas.socgen:11000/oozie</pom.cbs.oozie.url>

                <!-- ############################################## -->

                <pom.cbs.appuser>cbsppadm</pom.cbs.appuser>
                <pom.cbs.fs.projectroot>/applis/cbspp</pom.cbs.fs.projectroot>
                <pom.businessviews.fs.root_dir>${pom.cbs.fs.projectroot}/businessviews</pom.businessviews.fs.root_dir>
                <pom.cbs.fs.kerberosappkeytabpath>/applis/cbspp/.keytabs/cbsppadm.applicatif.keytab</pom.cbs.fs.kerberosappkeytabpath>

                <pom.businessviews.xml.hivecredential.bloc_comment_begin />
                <pom.businessviews.xml.hivecredential.bloc_comment_end />

                <!-- ############################################# -->

                <pom.businessviews.appenv>Prd</pom.businessviews.appenv>
                <pom.businessviews.spark_jar_name>cbs_businessviews_${project.version}.jar</pom.businessviews.spark_jar_name>

                <pom.businessviews.yarnqueue>CBSP</pom.businessviews.yarnqueue>
                <pom.businessviews.cbsoozielauncher>CBSP</pom.businessviews.cbsoozielauncher>

                <pom.businessviews.base_input_dir>${pom.global.namenode}/lake/resg</pom.businessviews.base_input_dir>
                <pom.businessviews.base_output_dir>${pom.cbs.hdfs.projectroot}/data</pom.businessviews.base_output_dir>

                <pom.businessviews.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/businessviews</pom.businessviews.hdfs.root_dir>
                <pom.businessviews.hdfs.bin_dir>${pom.businessviews.hdfs.root_dir}/bin</pom.businessviews.hdfs.bin_dir>
                <pom.businessviews.hdfs.conf_dir>${pom.businessviews.hdfs.root_dir}/conf</pom.businessviews.hdfs.conf_dir>
                <pom.businessviews.hdfs.conf_schemas_dir>${pom.businessviews.hdfs.conf_dir}/schemas</pom.businessviews.hdfs.conf_schemas_dir>
                <pom.businessviews.hdfs.lib_dir>${pom.businessviews.hdfs.root_dir}/lib</pom.businessviews.hdfs.lib_dir>
                <pom.businessviews.hdfs.componants_dir>${pom.businessviews.hdfs.root_dir}/technical_components</pom.businessviews.hdfs.componants_dir>
                <pom.businessviews.hdfs.oozie_dir>${pom.businessviews.hdfs.componants_dir}/oozie</pom.businessviews.hdfs.oozie_dir>
                <pom.businessviews.hdfs.oozie.coordinator_dir>${pom.businessviews.hdfs.oozie_dir}/coordinator</pom.businessviews.hdfs.oozie.coordinator_dir>
                <pom.businessviews.hdfs.oozie.workflow_dir>${pom.businessviews.hdfs.oozie_dir}/workflow</pom.businessviews.hdfs.oozie.workflow_dir>

                <pom.businessviews.hdfs.spark_dir>${pom.businessviews.hdfs.componants_dir}/spark</pom.businessviews.hdfs.spark_dir>
                <pom.businessviews.hdfs.hive_dir>${pom.businessviews.hdfs.componants_dir}/hive</pom.businessviews.hdfs.hive_dir>

                <pom.businessviews.hdfs.oozie.libpath>${pom.businessviews.hdfs.lib_dir},${pom.businessviews.hdfs.conf_schemas_dir}</pom.businessviews.hdfs.oozie.libpath>
                <pom.businessviews.hdfs.oozie.bundle_path>${pom.businessviews.hdfs.oozie_dir}/bundle.xml</pom.businessviews.hdfs.oozie.bundle_path>

                <pom.cbs.kerberosuser>cbsppadm</pom.cbs.kerberosuser>
                <pom.cbs.kerberosprincipal>cbsppadm/phadlx52.haas.socgen@PHAD</pom.cbs.kerberosprincipal>
                <pom.cbs.hdfs.kerberosappkeytabpath>${pom.global.namenode}/user/cbsppadm/cbsppadm.applicatif.keytab</pom.cbs.hdfs.kerberosappkeytabpath>
                <pom.businessviews.bt.num-executors>15</pom.businessviews.bt.num-executors>
                <pom.businessviews.bt.executor-cores>5</pom.businessviews.bt.executor-cores>
                <pom.businessviews.bt.executor-memory>9G</pom.businessviews.bt.executor-memory>

                <pom.kafkaproducer.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/kafka-producer</pom.kafkaproducer.hdfs.root_dir>
                <pom.enrichedata.hdfs.conf_schemas_dir>${pom.cbs.hdfs.projectroot}/enrichedata/conf/schemas</pom.enrichedata.hdfs.conf_schemas_dir>
            </properties>
        </profile>

        <profile>
            <id>dev-custom</id>
            <properties>
                <build.id>dev</build.id>

                <pom.cbs.build_third_party.output_json>true</pom.cbs.build_third_party.output_json>

                <!--This user for identify developper to isolate environement.
                This need to be setted only for 'dev-custom' maven profile.
                This variable must be declared with empty value in dev/hom/prd meven profile.
                Value need to be like this [a-zA-Z0-9] -->
                <pom.global.developper_id>ahamadi</pom.global.developper_id>

                <pom.global.cluster_name>dhadcluster02</pom.global.cluster_name>
                <pom.global.namenode>hdfs://${pom.global.cluster_name}</pom.global.namenode>
                <pom.global.kerberoshivemetastoreuri />
                <pom.global.kerberoshiveprincipal />

                <pom.cbs.hdfs.projectroot>${pom.global.namenode}/project/bsc/cbs/usecases/ahamadi</pom.cbs.hdfs.projectroot>
                <pom.cbs.hive.dbname>project_bsc_cbs</pom.cbs.hive.dbname>

                <pom.cbs.oozie.url>http://dhadlx54.dns21.socgen:11000/oozie</pom.cbs.oozie.url>

                <!-- ############################################## -->

                <pom.cbs.appuser>cbsddadm</pom.cbs.appuser>
                <pom.cbs.fs.projectroot>/applis/hadd/gcdl/cbs/usescases/ahamadi</pom.cbs.fs.projectroot>
                <pom.businessviews.fs.root_dir>${pom.cbs.fs.projectroot}/businessviews</pom.businessviews.fs.root_dir>
                <pom.cbs.fs.kerberosappkeytabpath>/etc/security/keytabs/cbsddadm@DDHAD.applicatif.keytab</pom.cbs.fs.kerberosappkeytabpath>

                <pom.businessviews.xml.hivecredential.bloc_comment_begin>&lt;!--</pom.businessviews.xml.hivecredential.bloc_comment_begin>
                <pom.businessviews.xml.hivecredential.bloc_comment_end>--&gt;</pom.businessviews.xml.hivecredential.bloc_comment_end>

                <!-- ############################################# -->

                <pom.businessviews.appenv>Dev</pom.businessviews.appenv>
                <pom.businessviews.spark_jar_name>cbs_businessviews_${build.id}_${project.version}.jar</pom.businessviews.spark_jar_name>

                <pom.businessviews.yarnqueue>DAT</pom.businessviews.yarnqueue>
                <pom.businessviews.cbsoozielauncher>OOZIE_LAUNCHER</pom.businessviews.cbsoozielauncher>

                <pom.businessviews.base_input_dir>${pom.global.namenode}/lake/resg</pom.businessviews.base_input_dir>
                <pom.businessviews.base_output_dir>${pom.cbs.hdfs.projectroot}/data</pom.businessviews.base_output_dir>

                <pom.businessviews.hdfs.root_dir>${pom.cbs.hdfs.projectroot}/businessviews</pom.businessviews.hdfs.root_dir>
                <pom.businessviews.hdfs.bin_dir>${pom.businessviews.hdfs.root_dir}/bin</pom.businessviews.hdfs.bin_dir>
                <pom.businessviews.hdfs.conf_dir>${pom.businessviews.hdfs.root_dir}/conf</pom.businessviews.hdfs.conf_dir>
                <pom.businessviews.hdfs.conf_schemas_dir>${pom.businessviews.hdfs.conf_dir}/schemas</pom.businessviews.hdfs.conf_schemas_dir>
                <pom.businessviews.hdfs.lib_dir>${pom.businessviews.hdfs.root_dir}/lib</pom.businessviews.hdfs.lib_dir>
                <pom.businessviews.hdfs.componants_dir>${pom.businessviews.hdfs.root_dir}/technical_components</pom.businessviews.hdfs.componants_dir>
                <pom.businessviews.hdfs.oozie_dir>${pom.businessviews.hdfs.componants_dir}/oozie</pom.businessviews.hdfs.oozie_dir>
                <pom.businessviews.hdfs.oozie.coordinator_dir>${pom.businessviews.hdfs.oozie_dir}/coordinator</pom.businessviews.hdfs.oozie.coordinator_dir>
                <pom.businessviews.hdfs.oozie.workflow_dir>${pom.businessviews.hdfs.oozie_dir}/workflow</pom.businessviews.hdfs.oozie.workflow_dir>

                <pom.businessviews.hdfs.spark_dir>${pom.businessviews.hdfs.componants_dir}/spark</pom.businessviews.hdfs.spark_dir>
                <pom.businessviews.hdfs.hive_dir>${pom.businessviews.hdfs.componants_dir}/hive</pom.businessviews.hdfs.hive_dir>

                <pom.businessviews.hdfs.oozie.libpath>${pom.businessviews.hdfs.lib_dir},${pom.businessviews.hdfs.conf_schemas_dir}</pom.businessviews.hdfs.oozie.libpath>
                <pom.businessviews.hdfs.oozie.bundle_path>${pom.businessviews.hdfs.oozie_dir}/bundle.xml</pom.businessviews.hdfs.oozie.bundle_path>

                <pom.cbs.kerberosuser>cbsddadm</pom.cbs.kerberosuser>
                <pom.cbs.kerberosprincipal>cbsddadm@DDHAD</pom.cbs.kerberosprincipal>
                <pom.cbs.hdfs.kerberosappkeytabpath>${pom.businessviews.hdfs.oozie_dir}/cbspdadm.applicatif.keytab</pom.cbs.hdfs.kerberosappkeytabpath>
                <pom.businessviews.bt.num-executors>10</pom.businessviews.bt.num-executors>
                <pom.businessviews.bt.executor-cores>5</pom.businessviews.bt.executor-cores>
                <pom.businessviews.bt.executor-memory>10G</pom.businessviews.bt.executor-memory>

                <pom.enrichedata.hdfs.conf_schemas_dir>${pom.cbs.hdfs.projectroot}/enrichedata/conf/schemas</pom.enrichedata.hdfs.conf_schemas_dir>
            </properties>
        </profile>

    </profiles>

</project>